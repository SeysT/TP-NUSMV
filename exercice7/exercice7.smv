-- Implémentation de l'algorithme auto-stabilisateur de Dijkstra
-- On prend K = 7 et N = 5

MODULE main
VAR
  drapeaux: array 0..2 of 0..6;
  etats_critiques: array 0..2 of boolean;
DEFINE
  K := 7;
ASSIGN
  init(drapeaux[0]) := {0, 1, 2, 3, 4, 5, 6};
  init(drapeaux[1]) := {0, 1, 2, 3, 4, 5, 6};
  init(drapeaux[2]) := {0, 1, 2, 3, 4, 5, 6};

  next(drapeaux[0]) := case
    drapeaux[0] = drapeaux[2] : (drapeaux[0] + 1) mod K;
    TRUE : drapeaux[0];
  esac;

  next(drapeaux[1]) := case
    drapeaux[1] != drapeaux[0] : drapeaux[0];
    TRUE: drapeaux[1];
  esac;

  next(drapeaux[2]) := case
    drapeaux[2] != drapeaux[1] : drapeaux[1];
    TRUE: drapeaux[2];
  esac;

  next(etats_critiques[0]) := drapeaux[0] != next(drapeaux[0]);
  next(etats_critiques[1]) := drapeaux[1] != next(drapeaux[1]);
  next(etats_critiques[2]) := drapeaux[2] != next(drapeaux[2]);

-- Chaque processus entre en section critique infiniment souvent
CTLSPEC AG AF(etats_critiques[0])
CTLSPEC AG AF(etats_critiques[1])
CTLSPEC AG AF(etats_critiques[2])

-- Au moins un changement à chaque étape à partir d'un moment
CTLSPEC AF AG(etats_critiques[0] | etats_critiques[1] | etats_critiques[2])

-- Seul un drapeau change à partir d'un moment
CTLSPEC AF AG(
  (etats_critiques[0] -> (!etats_critiques[1] & !etats_critiques[2])
  & (etats_critiques[1] -> (!etats_critiques[0] & !etats_critiques[2]))
  & (etats_critiques[2] -> (!etats_critiques[0] & !etats_critiques[1])))
)

-- Toutes les valeurs sont égales infiniment souvent à partir d'un moment
CTLSPEC AG AF(drapeaux[0] = drapeaux[1] & drapeaux[1] = drapeaux[2])
