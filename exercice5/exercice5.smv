-- La feuille a une capacité de 60g
-- Le lombric pèse 50g, le millepatte 30g et la sauterelle 20g
-- La feuille doit traverser la rivière avec au moins un insecte sur son dos
MODULE main
VAR
  feuille: boolean;
  lombric: boolean;
  millepatte: boolean;
  sauterelle: boolean;

INIT
  !feuille & !lombric & !millepatte & !sauterelle

TRANS
  feuille & lombric & millepatte & sauterelle ->
    !next(feuille) & !next(lombric) & next(millepatte) & next(sauterelle) |
    !next(feuille) & next(lombric) & !next(millepatte) & next(sauterelle) |
    !next(feuille) & next(lombric) & next(millepatte) & !next(sauterelle) |
    !next(feuille) & next(lombric) & !next(millepatte) & !next(sauterelle);

TRANS
  feuille & lombric & millepatte & !sauterelle ->
    !next(feuille) & !next(lombric) & next(millepatte) & !next(sauterelle) |
    !next(feuille) & next(lombric) & !next(millepatte) & !next(sauterelle);

TRANS
  feuille & lombric & !millepatte & sauterelle ->
    !next(feuille) & !next(lombric) & !next(millepatte) & next(sauterelle) |
    !next(feuille) & next(lombric) & !next(millepatte) & !next(sauterelle);

TRANS
  feuille & lombric & !millepatte & !sauterelle ->
    !next(feuille) & !next(lombric) & !next(millepatte) & !next(sauterelle);

TRANS
  feuille & !lombric & millepatte & sauterelle ->
    !next(feuille) & !next(lombric) & !next(millepatte) & next(sauterelle) |
    !next(feuille) & !next(lombric) & next(millepatte) & !next(sauterelle) |
    !next(feuille) & !next(lombric) & !next(millepatte) & !next(sauterelle);

TRANS
  feuille & !lombric & !millepatte & sauterelle ->
    !next(feuille) & !next(lombric) & !next(millepatte) & !next(sauterelle);

TRANS
  feuille & !lombric & millepatte & !sauterelle ->
    !next(feuille) & !next(lombric) & !next(millepatte) & !next(sauterelle);

TRANS
  !feuille & lombric & millepatte & !sauterelle ->
    next(feuille) & next(lombric) & next(millepatte) & next(sauterelle);

TRANS
  !feuille & lombric & !millepatte & sauterelle ->
    next(feuille) & next(lombric) & next(millepatte) & next(sauterelle);

TRANS
  !feuille & lombric & !millepatte & !sauterelle ->
    next(feuille) & next(lombric) & next(millepatte) & !next(sauterelle) |
    next(feuille) & next(lombric) & !next(millepatte) & next(sauterelle) |
    next(feuille) & next(lombric) & next(millepatte) & next(sauterelle); 

TRANS
  !feuille & !lombric & millepatte & sauterelle ->
    next(feuille) & next(lombric) & next(millepatte) & next(sauterelle);

TRANS
  !feuille & !lombric & !millepatte & !sauterelle ->
    next(feuille) & next(lombric) & !next(millepatte) & !next(sauterelle) |
    next(feuille) & !next(lombric) & next(millepatte) & !next(sauterelle) |
    next(feuille) & !next(lombric) & !next(millepatte) & next(sauterelle) |
    next(feuille) & !next(lombric) & next(millepatte) & next(sauterelle);

TRANS
  !feuille & !lombric & millepatte & !sauterelle ->
    next(feuille) & next(lombric) & next(millepatte) & !next(sauterelle) |
    next(feuille) & !next(lombric) & next(millepatte) & next(sauterelle); 

TRANS
  !feuille & !lombric & !millepatte & sauterelle ->
    next(feuille) & next(lombric) & !next(millepatte) & next(sauterelle) |
    next(feuille) & !next(lombric) & next(millepatte) & next(sauterelle); 

-- Il existe un chemin pour leque le lombric, le millepatte et la sauterelle auront traversé à un moment
SPEC EF(lombric & millepatte & sauterelle)

-- On vérifie qu'aucun chemin ne mène à ce que la feuille ait traversé toute seule
SPEC AG(!(feuille & !lombric & !millepatte & !sauterelle))
SPEC AG(!(!feuille & lombric & millepatte & sauterelle))
