MODULE main
VAR
  state : {a_b, a_notb, nota_b, nota_notb};
ASSIGN 
  init(state) := a_notb;
  next(state) := case
    state = a_notb : {a_b, nota_b, nota_notb};
    state = a_b : a_notb;
    state = nota_notb : nota_b;
    state = nota_b : nota_b;
  esac;
DEFINE
  a := state = a_b | state = a_notb;
  b := state = a_b | state = nota_b;

LTLSPEC G(a)
LTLSPEC a U b
LTLSPEC a U X (a & !b)
LTLSPEC X !b & G(!a | !b)
LTLSPEC X (a & b) & F(!a & !b)
SPEC EF EG a
SPEC EF EG b
LTLSPEC F((G a) | (G b))
